# from typing import Any
# from app.admin.keyboards.keyboards import InlineKeyboardManager

# from aiogram.types import (
#     InlineKeyboardButton,
#     InlineKeyboardMarkup,
# )
# from aiogram.utils.keyboard import InlineKeyboardBuilder

# keyboard = InlineKeyboardManager()
# keyboard.add_previous_menu_button(previous_menu="NAZAD")


# test = keyboard.create_keyboard()

# # keyboard.add_admin_button("test")

# keyboard.add_extra_buttons(["test"])
# test2 = keyboard.create_keyboard()
# # print(vars(keyboard))
# keyboard.add_extra_buttons(["extra_test"])
# test3 = keyboard.create_keyboard()


def get_buttons_from_keyboard(keyboard):
    button_list = []
    for row in keyboard.inline_keyboard:
        for button in row:
            button_list.append((button.text, button.callback_data))
    return button_list


# keyboard.update_buttons(["updated_list"])
# test4 = keyboard.create_keyboard()
# print(get_buttons_from_keyboard(test))
# print(get_buttons_from_keyboard(test2))
# print(get_buttons_from_keyboard(test3))
# print(get_buttons_from_keyboard(test4))


# class InlineKeyboardManager:
#     def __init__(
#         self,
#         options=None,
#         callback=None,
#         urls=None,
#         size=(1,),
#         previous_menu=None,
#         admin_update_menu=None,
#     ):
#         self.options = options if options is not None else []
#         self.callback = callback if callback is not None else self.options
#         self.urls = urls if urls is not None else []
#         self.size = size
#         self.previous_menu = previous_menu
#         self.admin_update_menu = admin_update_menu
#         self.keyboard = InlineKeyboardBuilder()

#     def add_buttons(self):
#         """–î–æ–±–∞–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É."""
#         for index, option in enumerate(self.options):
#             self.keyboard.add(
#                 InlineKeyboardButton(
#                     text=option,
#                     callback_data=str(self.callback[index]),
#                     url=(
#                         self.urls[index]
#                         if self.urls and index < len(self.urls)
#                         else None
#                     ),
#                 )
#             )

#     def add_back_button(self):
#         """–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'."""
#         if self.previous_menu:
#             self.keyboard.add(
#                 InlineKeyboardButton(
#                     text="–ù–∞–∑–∞–¥",
#                     callback_data=self.previous_menu,
#                 )
#             )

#     def add_admin_button(self):
#         """–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."""
#         self.keyboard.add(
#             InlineKeyboardButton(
#                 text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—åüîß",
#                 callback_data=f"{self.admin_update_menu}_",
#             )
#         )

#     def create_keyboard(self) -> InlineKeyboardMarkup:
#         """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –≤–µ—Ä–Ω—É—Ç—å –µ–µ.

#         :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏.
#         """
#         self.add_buttons()
#         if self.previous_menu:
#             self.add_back_button()
#         if self.admin_update_menu:
#             self.add_admin_button
#         return self.keyboard.adjust(*self.size).as_markup(resize_keyboard=True)


# def get_base_inline_keyboard(
#     options=None,
#     callback=None,
#     urls=None,
#     previous_menu=None,
# ):
#     return InlineKeyboardManager(
#         options=options,
#         callback=callback,
#         urls=urls,
#         previous_menu=previous_menu,
#     ).create_keyboard()


# def get_admin_keyboard(
#     admin_update_menu,
#     options=None,
#     callback=None,
#     urls=None,
#     previous_menu=None,
# ):
#     return InlineKeyboardManager(
#         options=options,
#         callback=callback,
#         urls=urls,
#         previous_menu=previous_menu,
#         admin_update_menu=admin_update_menu,
#     ).create_keyboard()


# class AdminInlineKeyboard(BaseInlineKeyboardManager):
#     """
#     –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.

#     –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –Ω–∞—Å–ª–µ–¥—É–µ—Ç –±–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
#     –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
#     """

#     def __init__(
#         self,
#         admin_update_menu: str,
#         *args,
#         **kwargs,
#     ):
#         self.admin_update_menu = admin_update_menu
#         super().__init__(*args, **kwargs)

#     def add_admin_button(self):
#         """–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."""
#         self.keyboard.add(
#             InlineKeyboardButton(
#                 text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—åüîß",
#                 callback_data=f"{self.admin_update_menu}_",
#             )
#         )

#     def create_keyboard(self) -> InlineKeyboardMarkup:
#         """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –≤–µ—Ä–Ω—É—Ç—å –µ–µ.

#         :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup —Å –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏,
#                  –≤–∫–ª—é—á–∞—è –∫–Ω–æ–ø–∫—É "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å".
#         """
#         super().create_keyboard()
#         self.add_admin_button()
#         return self.keyboard


# def get_base_inline_keyboard(options=None, callback=None, urls=None):
#     """–°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.

#     :param options: –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–æ–ø–æ–∫.
#     :param callback: –°–ø–∏—Å–æ–∫ –∫–æ–ª–ª–±–µ–∫-–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–Ω–æ–ø–æ–∫.
#     :param urls: –°–ø–∏—Å–æ–∫ URL –¥–ª—è –∫–Ω–æ–ø–æ–∫.
#     :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup.
#     """
#     return BaseInlineKeyboardManager(
#         options, callback=callback, urls=urls
#     ).create_keyboard()


# def get_admin_inline_kb(
#     admin_update_menu,
#     options=None,
#     callback=None,
#     urls=None,
#     previous_menu=None,
# ):
#     """–°–æ–∑–¥–∞—Ç—å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.

#     :param admin_update_menu: –ö–æ–ª–ª–±–µ–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å".
#     :param options: –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–æ–ø–æ–∫.
#     :param callback: –°–ø–∏—Å–æ–∫ –∫–æ–ª–ª–±–µ–∫-–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–Ω–æ–ø–æ–∫.
#     :param urls: –°–ø–∏—Å–æ–∫ URL –¥–ª—è –∫–Ω–æ–ø–æ–∫.
#     :param previous_menu: –ö–æ–ª–ª–±–µ–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥".
#     :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup.
#     """
#     return AdminInlineKeyboard(
#         admin_update_menu=admin_update_menu,
#         options=options,
#         callback=callback,
#         urls=urls,
#         previous_menu=previous_menu,
#     ).create_keyboard()

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder


class InlineKeyboardManager:
    """
    –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä.

    –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –∫–Ω–æ–ø–∫–∏, –≤–∫–ª—é—á–∞—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    –∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥".
    """

    def __init__(
        self,
        options=None,
        callback=None,
        urls=None,
        size=(1,),
        previous_menu=None,
        admin_update_menu=None,
    ):
        self.options = options if options is not None else []
        self.callback = callback if callback is not None else self.options
        self.urls = urls if urls is not None else []
        self.size = size
        self.previous_menu = previous_menu
        self.admin_update_menu = admin_update_menu
        self.keyboard = InlineKeyboardBuilder()

    def add_buttons(self):
        """–î–æ–±–∞–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É."""
        for index, option in enumerate(self.options):
            self.keyboard.add(
                InlineKeyboardButton(
                    text=option,
                    callback_data=str(self.callback[index]),
                    url=(
                        self.urls[index]
                        if self.urls and index < len(self.urls)
                        else None
                    ),
                )
            )

    def add_back_button(self):
        """–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'."""
        if self.previous_menu:
            self.keyboard.add(
                InlineKeyboardButton(
                    text="–ù–∞–∑–∞–¥",
                    callback_data=self.previous_menu,
                )
            )

    def add_admin_button(self):
        """–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å' –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."""
        if self.admin_update_menu:
            self.keyboard.add(
                InlineKeyboardButton(
                    text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—åüîß",
                    callback_data=f"{self.admin_update_menu}_",
                )
            )

    def create_keyboard(self) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –≤–µ—Ä–Ω—É—Ç—å –µ–µ."""
        self.add_buttons()
        self.add_back_button()
        self.add_admin_button()  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω—ã —Å–∫–æ–±–∫–∏
        return self.keyboard.adjust(*self.size).as_markup(resize_keyboard=True)


def get_base_inline_keyboard(
    options=None,
    callback=None,
    urls=None,
    previous_menu=None,
):
    """–°–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤—É—é –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.

    :param options: –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–æ–ø–æ–∫.
    :param callback: –°–ø–∏—Å–æ–∫ –∫–æ–ª–ª–±–µ–∫-–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–Ω–æ–ø–æ–∫.
    :param urls: –°–ø–∏—Å–æ–∫ URL –¥–ª—è –∫–Ω–æ–ø–æ–∫.
    :param previous_menu: –ö–æ–ª–ª–±–µ–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥".
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup.
    """
    return InlineKeyboardManager(
        options=options,
        callback=callback,
        urls=urls,
        previous_menu=previous_menu,
    ).create_keyboard()


def get_admin_keyboard(
    admin_update_menu,
    options=None,
    callback=None,
    urls=None,
    previous_menu=None,
):
    """–°–æ–∑–¥–∞—Ç—å –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.

    :param admin_update_menu: –ö–æ–ª–ª–±–µ–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å".
    :param options: –°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–æ–ø–æ–∫.
    :param callback: –°–ø–∏—Å–æ–∫ –∫–æ–ª–ª–±–µ–∫-–¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–Ω–æ–ø–æ–∫.
    :param urls: –°–ø–∏—Å–æ–∫ URL –¥–ª—è –∫–Ω–æ–ø–æ–∫.
    :param previous_menu: –ö–æ–ª–ª–±–µ–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥".
    :return: –û–±—ä–µ–∫—Ç InlineKeyboardMarkup.
    """
    return InlineKeyboardManager(
        options=options,
        callback=callback,
        urls=urls,
        previous_menu=previous_menu,
        admin_update_menu=admin_update_menu,
    ).create_keyboard()
